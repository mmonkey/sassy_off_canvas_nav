/*! off_canvas_nav.css v1.0.0 | MIT License | by: CJ O'Hara */

//
// Variables
//

// How wide the off-canvas navigation menu is (when opened)
$off-canvas-width: 13em;

// When animating, this is the additional space the the main cavas "bounces", this number
// will also add padding to the off_canvas_container and off_canvas_top_menu elements.
// NOTE: This must be in the same units as $off-canvas-width.
$off-canvas-animation-offset: 1.5em;

// Position of the off-canvas navigation, options: right or left
$off-canvas-position: left;

// What breakpoint should the off-canvas navigation be shown
$off-canvas-breakpoint: 64em;

// How tall the off-canvas top menu is
$off-canvas-top-menu-height: 3em;

//
// Colors
//

$main-background: white;
$off-canvas-background: grey;

//
// Mixins
//

@mixin off-canvas-breakpoint {
  @media only screen and (max-width: $off-canvas-breakpoint) {
    @content;
  }
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
@mixin animation($args...) {
    $max: length($args);
    $animations: '';
    @for $i from 1 through $max {
        $animations: #{$animations + nth($args, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation: $animations;
    -o-animation: $animations;
    animation: $animations;
}
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}
@mixin box-shadow($args...) {
  -webkit-box-shadow: $args;
  -moz-box-shadow: $args;
  -ms-box-shadow: $args;
  box-shadow: $args;
}

//
// Functions
//

@function get-opposite($direction) {
	$opposite: right;
	@if $direction == 'right' {
		$opposite: left;
	}
	@return $opposite;
}
@function get-opposite-padding($direction) {
	$opposite-padding: padding-right;
	@if $direction == 'right' {
		$opposite-padding: padding-left;
	}
	@return $opposite-padding;
}

//
// Styles
//

html, body {
	height: 100%;
}
.container {
	overflow: hidden;
	background-color: #000000;
}
.content {
	background: $main-background;
	#{$off-canvas-position}: 0;
	position: relative;
	padding: 1em 0;
	z-index: 1;
}
.nav_toggle {
	display: none;
	cursor: pointer;
}
.off_canvas_container {
	background: $off-canvas-background;
	width: $off-canvas-width + $off-canvas-animation-offset;
	#{get-opposite-padding($off-canvas-position)}: $off-canvas-animation-offset;
	height: 100%;
	position: fixed;
	top: 0;
	bottom: 0;
	z-index: 0;
	display: none;
	overflow-x: hidden;
	overflow-y: scroll;
  	-webkit-overflow-scrolling: touch;

	@include off-canvas-breakpoint {
		display: block;
	}
}
.off_canvas_top_menu {
	display: block;
	position: fixed;
	top: 0;
	z-index: 3;
	#{get-opposite-padding($off-canvas-position)}: $off-canvas-animation-offset;
	#{$off-canvas-position}: 0;
	width: $off-canvas-width + $off-canvas-animation-offset;
	height: $off-canvas-top-menu-height;
}
.off_canvas_toggles {
	position: relative;
	width: $off-canvas-width;
	height: $off-canvas-top-menu-height;
}
.nav_close_btn {
	position: absolute;
	display: inline-block;
	top: 0;
	bottom: 0;
	right: 0;
	cursor: pointer;
}
.nav_prev_btn {
	@extend .nav_close_btn;
	display: none;
	left: 0;
}
nav.off_canvas {
	position: relative;
	margin-top: $off-canvas-top-menu-height;
	display: none;
	overflow-x: hidden;
	overflow-y: scroll;
	webkit-overflow-scrolling: touch;

	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}
	a, a:link, a:visited {
		display: block;
	}
	> ul ul {
		position: absolute;
		top: 0;
		bottom: 0;
		background: $off-canvas-background;
		width: $off-canvas-width;
		#{$off-canvas-position}: $off-canvas-width + $off-canvas-animation-offset;
		display: block;
		@include transition(#{$off-canvas-position} .35s ease-in-out);
	}
	span.nav_next_btn {
		position: absolute;
		text-decoration: none;
		right: 0;
		display: inline-block;
	}
	ul.nav_level_current {
		z-index: 2;
		#{$off-canvas-position}: 0;
	}
	ul.nav_level_prev {
		z-index: 1;
		#{$off-canvas-position}: 0;
	}
}

@include off-canvas-breakpoint {
	nav.main_nav {
		display: none;
	}
	nav.off_canvas {
		display: block;
	}
	.nav_toggle {
		display: inline-block;
		position: absolute;
		top: 0;
		#{$off-canvas-position}: 0;
	}
	.off_canvas_animate.open {
		opacity: 1;
		position: fixed;
		#{$off-canvas-position}: 0;
		@include animation(slideIn .35s ease-in-out);
	}

	@include keyframes(slideIn) {
		0% { opacity: .3; #{$off-canvas-position}: $off-canvas-width / 4; }
		100% { opacity: 1; #{$off-canvas-position}: 0; }
	}

	/*Nav Shrinking Closed Effect*/
	.off_canvas_animate.close {
		opacity: .3;
		#{$off-canvas-position}: $off-canvas-width / 4;
		@include animation(slideOut .35s ease-in-out);
	}
	@include keyframes(slideOut) {
		0% { opacity: 1; #{$off-canvas-position}: 0; }
		100% { opacity: .3; #{$off-canvas-position}: $off-canvas-width / 4; }
	}

	.content_animate {
		#{$off-canvas-position}: 0;
	}

	/* CONTENT ANNIMATION */
	.content_animate.open {
		cursor: pointer;
		#{$off-canvas-position}: $off-canvas-width;
		@include animation(open .5s ease-in-out);
	}
	@include keyframes(open) {
		0% { #{$off-canvas-position}: 0; }
		70% { #{$off-canvas-position}: $off-canvas-width + $off-canvas-animation-offset; }
		100% { #{$off-canvas-position}: $off-canvas-width; }
	}

	/*Content Sliding Closed Effect*/
	.content_animate.close {
		#{$off-canvas-position}: 0;
		@include animation(close .3s ease-in-out);
	}
	@include keyframes(close) {
		0% { #{$off-canvas-position}: $off-canvas-width; }
		100% { #{$off-canvas-position}: 0; }
	}
}